<Application x:Class="SortAlgorithms.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>

            <!--input TextBox-->
            <Style TargetType="TextBox" x:Key="TextBox">
                <Setter Property="Margin" Value="4"/>
                <Setter Property="Foreground" Value="DarkGray"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Grid>
                                <Border x:Name="outerBorder" Background="White" 
                                        BorderThickness="1"
                                        Margin="4"
                                        CornerRadius="5"
                                        BorderBrush="Black"/>
                                <Border x:Name="innerBorder" Focusable="False" 
                                        BorderThickness="0"
                                        Background="Transparent"
                                        Margin="5">
                                    <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"  Value="true">
                                    <Setter TargetName="outerBorder" Property="Border.BorderBrush" Value="Blue"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="outerBorder" Property="Border.BorderThickness" Value="1"/>
                                    <Setter TargetName="outerBorder" Property="Border.BorderBrush" Value="DarkGray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--TextBlock for explanation-->
            <Style TargetType="TextBlock" x:Key="TextBlockInfo">
                <Setter Property="FontSize" Value="24"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="4" />
                <Setter Property="Foreground" Value="LightGray"/>
            </Style>

            <!--TextBlock for sort info-->
            <Style TargetType="TextBlock" x:Key="TextBlock" BasedOn="{StaticResource TextBlockInfo}">
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="Foreground" Value="White"/>
            </Style>

            <!--Button style-->
            <Style TargetType="Button" x:Key="Button">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="4"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Rectangle x:Name="innerRect" RadiusX="15" RadiusY="15" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                                           Fill="LightSkyBlue"/>
                                <ContentPresenter x:Name="content" Margin="6,2,6,2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                                  TextBlock.FontSize="24" TextBlock.Foreground="White"/>
                            </Grid>
                            <!--Triggers-->
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Rectangle.Stroke" Value="Blue" TargetName="innerRect"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="innerRect" Property="Rectangle.StrokeThickness" Value="1"/>
                                    <Setter TargetName="innerRect" Property="Rectangle.Stroke" Value="DarkGray"/>
                                </Trigger>
                                <Trigger Property="FontSize" Value="12">
                                    <Setter TargetName="content" Property="TextBlock.FontSize" Value="12"/>
                                    <Setter TargetName="innerRect" Property="RadiusX" Value="10"/>
                                    <Setter TargetName="innerRect" Property="RadiusY" Value="10"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--ComboBox style-->
            <!--ToggleButton for ComboBox-->
            <ControlTemplate TargetType="ToggleButton" x:Key="ToggleButton">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <Border x:Name="outerBorder" Grid.ColumnSpan="2"  MinWidth="20"
                                        Background="White" BorderBrush="Black" BorderThickness="1"
                                        CornerRadius="5"/>
                    <Border x:Name="innerBorder" Grid.Column="0" Margin="2"
                                        Background="Transparent" BorderThickness="1"/>
                    <Path x:Name="Arrow" Grid.Column="1" Margin="4" 
                                      Fill="Black" VerticalAlignment="Center" HorizontalAlignment="Center"
                                      Data="M0,0 L0,3 L6,9 L12,3 L12,0 L6,6 z"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="outerBorder" Property="Border.BorderBrush" Value="Blue"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="Arrow" Property="Path.Fill" Value="#444444"/>
                        <Setter TargetName="outerBorder" Property="Border.BorderBrush" Value="#888888"/>
                    </Trigger>
                    <Trigger Property="BorderBrush" Value="DarkGray">
                        <Setter TargetName="outerBorder" Property="Border.BorderBrush" Value="DarkGray"/>
                    </Trigger>
                    <Trigger Property="BorderThickness" Value="1">
                        <Setter TargetName="outerBorder" Property="Border.BorderThickness" Value="1"/>
                    </Trigger>
                    <Trigger Property="Foreground" Value="DarkGray">
                        <Setter TargetName="Arrow" Property="Path.Fill" Value="DarkGray"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <!--Text box for ComboBox-->
            <ControlTemplate TargetType="TextBox" x:Key="ComboBoxTextBox">
                <Border x:Name="ContentHost" Focusable="False" Background="{TemplateBinding Background}"/>
            </ControlTemplate>
            <!--Exactly ComboBox style-->
            <Style TargetType="ComboBox" x:Key="ComboBox">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="4"/>
                <Setter Property="MinWidth" Value="80"/>
                <Setter Property="MinHeight" Value="25"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <ToggleButton x:Name="toggleButton"
                                              Template="{StaticResource ToggleButton}"
                                              Grid.Column="2"
                                              Focusable="False"
                                              IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press"/>
                                <ContentPresenter x:Name="contentSite" IsHitTestVisible="False"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  Margin="4,4,20,4"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Left"/>
                                <TextBox x:Name="textBlock" Grid.Column="0"
                                         Template="{StaticResource ComboBoxTextBox}"
                                         HorizontalAlignment="Left" VerticalAlignment="Center"
                                         Margin="4"
                                         IsReadOnly="{TemplateBinding IsReadOnly}"/>
                                <Popup x:Name="popup" 
                                       Focusable="True"
                                       IsOpen="{TemplateBinding IsDropDownOpen}" 
                                       AllowsTransparency="True" 
                                       PopupAnimation="Slide" 
                                       Placement="Bottom">

                                    <Grid x:Name="popupGrid" 
                                          SnapsToDevicePixels="True"
                                          MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="popupBorder" 
                                                Background="#FF4F4F4F"
                                                BorderBrush="Black"
                                                BorderThickness="1"/>
                                        <ScrollViewer Margin="4,2,2,2">
                                            <!--Very important!-->
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="toggleButton" Property="ToggleButton.BorderThickness" Value="1"/>
                                    <Setter TargetName="toggleButton" Property="ToggleButton.BorderBrush" Value="DarkGray"/>
                                    <Setter TargetName="toggleButton" Property="ToggleButton.Foreground" Value="DarkGray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--ComboBoxItem-->
            <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="Foreground" Value="#888888"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                                <ContentPresenter/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="#444444"/>
                                    <Setter  Property="Foreground" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property ="Background"  Value="#777778"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--ProgressBar style-->
            <Style TargetType="ProgressBar" x:Key="CollectionItem">
                <Setter Property="IsEnabled" Value="True"/>
                <Setter Property="Orientation" Value="Vertical"/>
                <Setter Property="Margin" Value="2,10,2,5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ProgressBar" >
                            <Grid x:Name="Root" MinWidth="20">
                                <Border x:Name="PART_Track" 
                                        CornerRadius="2" 
                                        Background="Transparent"
                                        BorderThickness="0" />
                                <Border x:Name="PART_Indicator" 
                                        CornerRadius="2" 
                                        Background="DarkBlue" 
                                        BorderBrush="CadetBlue" 
                                        BorderThickness="1"
                                        HorizontalAlignment="Left"/>
                                <TextBlock x:Name="txtValue"
                                           Margin="20,0,0,0"
                                           Background="Transparent"
                                           Foreground="White"
                                           FontSize="10">
                                    <TextBlock.Text>
                                        <Binding Path="Value">
                                            <Binding.RelativeSource>
                                                <RelativeSource Mode="FindAncestor" AncestorType="ProgressBar"/>
                                            </Binding.RelativeSource>
                                        </Binding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Orientation" Value="Vertical">
                                    <Setter TargetName="Root" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="270" />
                                        </Setter.Value>
                                    </Setter>

                                    <Setter TargetName="Root" Property="Width"
                Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height}"/>
                                    <Setter TargetName="Root" Property="Height"
                Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width}"/>
                                </Trigger>

                                <Trigger Property="IsHitTestVisible" Value="false">
                                    <Setter TargetName="PART_Indicator" Property="Border.Background" Value="Red"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="PART_Indicator" Property="Border.Background" Value="Green"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsHitTestVisible" Value="true"/>
                                        <Condition Property="IsEnabled" Value="true"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_Indicator" Property="Border.Background" Value="DarkBlue"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>